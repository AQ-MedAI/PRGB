[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "prgb"
version = "1.0.0"
description = "PRGB - Placeholder RAG Benchmark for evaluating RAG systems"
readme = "README.md"
requires-python = ">=3.7"
license = {text = "Apache-2.0"}
authors = [
    {name = "PRGB Team", email = "tanzhehao.tzh@antgroup.com"}
]
maintainers = [
    {name = "PRGB Team", email = "jiaoyihan.yh@antgroup.com"}
]
keywords = ["rag", "evaluation", "benchmark", "nlp", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "torch>=1.9.0",
    "transformers>=4.20.0",
    "datasets>=2.0.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "tqdm>=4.62.0",
    "pyyaml>=6.0",
    "requests>=2.25.0",
    "openai>=0.27.0",
    "anthropic>=0.3.0",
    "google-generativeai>=0.3.0",
    "vllm>=0.2.0",
    "accelerate>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "pre-commit>=2.20.0",
    "mypy>=1.0.0",
]

docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.scripts]
prgb = "eval:main"

[project.urls]
Homepage = "https://github.com/your-org/prgb"
Documentation = "https://prgb.readthedocs.io/"
Repository = "https://github.com/your-org/prgb"
"Bug Tracker" = "https://github.com/your-org/prgb/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "utils*"]
exclude = ["tests*", "examples*"]

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["core", "utils"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "datasets.*",
    "vllm.*",
    "openai.*",
    "anthropic.*",
    "google.generativeai.*",
]
ignore_missing_imports = true